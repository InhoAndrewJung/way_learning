<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	

	
<mapper namespace="techBoardMapper">

	
	
	
	<insert id="write" parameterType="techBoard">
		<selectKey keyProperty="boardNo" resultType="int" order="BEFORE">
			SELECT
			wl_tech_board_SEQ.nextval FROM dual
		</selectKey>
		INSERT INTO wl_tech_board (board_no, writer, title, content)
		VALUES(#{boardNo},#{member.userId},#{title},#{content})
		
		
	</insert>

	<select id="selectByNoForDate" resultType="Date"
		parameterType="int">
		SELECT reg_date FROM wl_tech_board
		WHERE board_no=#{value}
	</select>

	<!-- 전체게시글보기를 위한 resultMap -->
	<!-- jdbctype은 insert, update, delete의 경우 nullable column인 경우에만 필수적이다. -->
	<resultMap type="techBoard" id="boardListRM">
		<result property="boardNo" column="board_no" />
		<result property="title" column="title" />
		<result property="cntView" column="cnt_view" />
		<result property="regDate" column="reg_date" />
		<result property="member.userId" column="user_id" />
	</resultMap>

	<select id="getBoardList" resultMap="boardListRM" parameterType="string">
		SELECT board_no, title, cnt_view, reg_date, user_id ,page,(select count(*) from wl_tech_reply  where board_no=b.board_no) cntReply 
		FROM (SELECT board_no, title,  cnt_view, reg_date, CEIL(rownum/5) page, user_id  
		FROM (SELECT tb.board_no, title, cnt_view, tb.reg_date, m.user_id
		FROM wl_tech_board tb, wl_member m
	<include refid="search" />
		ORDER BY tb.board_no DESC)
		
		) b
		where page=#{boardNo}
	</select>

	<!-- 특정 no에 해당하는 상세글보는 resultaMap -->
	<resultMap type="techBoard" id="boardRM" extends="boardListRM">
		<result property="content" column="content" />
		<result property="member.userId" column="user_id" />
		
	</resultMap>

	<select id="showContent" parameterType="string" resultMap="boardRM">
		SELECT board_no, title, cnt_view, tb.reg_date, content, m.user_id
		FROM wl_tech_board tb, wl_member m
		WHERE tb.writer =m.user_id AND board_no=#{value}
	</select>

	<delete id="deleteBoard">
		Delete from wl_tech_board where
		board_no=#{value}
	</delete>

	<update id="updateCount">
		update wl_tech_board set cnt_view=cnt_view+1 where
		board_no=#{value}
	</update>
	
	<update id="updateBoard">
		update wl_tech_board set
		title=#{title},content=#{content}  where board_no=#{boardNo}

	</update>

	<!-- 페이징 처리스 추가 -->

	<select id="totalCount" resultType="int">
		select count(-1) from
		wl_tech_board

	</select>

	<select id="countReply">
		select count(-1) from wl_tech_reply  where reply_no=#{replyNo}
	</select>

	<select id="countArticle" resultType="int">
		select count(*) from wl_tech_board tb, wl_member m
		<include refid="search" />
	</select>

	
	<sql id="search">
		
			<where>
			 tb.writer=m.user_id  

			<if test="search_option == 'all' ">
	 
				and 
				(m.user_id like '%'||#{keyword}||'%' 
				or content like '%'||#{keyword}||'%'
				or title like '%'||#{keyword}||'%'
				or tb.board_no in(select reply_no from wl_tech_reply where replytext  like '%'||#{keyword}||'%')
				)
			</if>
			
			<if test="search_option != 'all' ">
				<if test="search_option == 'replytext' ">
				 and tb.board_no in(select reply_no from wl_tech_reply where replytext  like '%'||#{keyword}||'%')
				</if>
				<if test="search_option !=  'replytext' ">
					and ${search_option} like '%'||#{keyword}||'%'
				</if>
					 
		
					
					
			
			
			</if>

			</where>

	</sql>

</mapper>	


















































